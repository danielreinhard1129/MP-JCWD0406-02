// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @default("")
  fullName String
  password String
  email String @unique
  profile_picture String @default("")
  point_balance Int @default(0)
  contact Int @default(62)
  address String @default("")
  referral_number String
  updateAt DateTime @default(now())
  createdAt DateTime @updatedAt
  roleId Int
  role Role @relation(fields: [roleId], references: [id])
}


model Role {
  id Int @id @default(autoincrement())
  role String
  user User[]
}


model Event {
  id Int @id @default(autoincrement())
  event_name String
  price Int
  dateTime DateTime
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  location String
  description String
  avaibleSeat Int
  banner String
  category String
  promotorId Int
  promotor Promotor @relation(fields: [promotorId], references: [id])
  type_category TypeCategory[]
  event_category EventCategory[]
}

model Promotor {
  id Int @id @default(autoincrement())
  name String
  email String
  descripsi String
  contact Int
  event Event[]
}

model TypeCategory {
  id Int @id @default(autoincrement())
  name_category Int
  eventId Int
  event Event @relation(fields: [eventId],references: [id], onDelete:Cascade )
  event_category EventCategory[]
}

model EventCategory {
  id Int @id @default(autoincrement())
  type_categoryId Int
  type_category TypeCategory @relation(fields: [type_categoryId], references: [id], onDelete: Cascade)
  eventId Int
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}
 
